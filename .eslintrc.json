{
  "env": {
    "es2020": true,
    "browser": true,
    "jest": true
  },
  "parserOptions": {
    "sourceType": "module"
  },
  "extends": [
    "airbnb",
    "airbnb/hooks"
  ],
  "globals": {
    "rxjs": "readonly",
    "shallow": "readonly"
  },
  "rules": {
    "func-style": [
      "warn",
      "declaration",
      {
        "allowArrowFunctions": true
      }
    ],
    "no-restricted-syntax": [
      "error",
      {
        "selector": "ForInStatement",
        "message": "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array."
      },
      {
        "selector": "LabeledStatement",
        "message": "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand."
      },
      {
        "selector": "WithStatement",
        "message": "`with` is disallowed in strict mode because it makes code impossible to predict and optimize."
      }
    ],
    "object-curly-spacing": [
      "error",
      "never"
    ],
    "max-len": [
      "error",
      {
        "code": 100,
        "tabWidth": 2,
        "ignoreComments": true,
        "ignoreUrls": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreRegExpLiterals": true
      }
    ],
    "accessor-pairs": [
      "error",
      {
        "setWithoutGet": true,
        "getWithoutSet": false,
        "enforceForClassMembers": true
      }
    ],
    "no-dupe-keys": "error",
    "no-dupe-class-members": "error",
    "newline-after-var": "error",
    "newline-before-return": "error",
    "lines-around-directive": "error",
    "no-useless-call": "error"
  },
  "overrides": [
    {
      "files": [
        "*.test.js"
      ],
      "rules": {
        "react/jsx-filename-extension": "off"
      }
    },
    {
      "files": [
        "*.stories.js"
      ],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "react/jsx-filename-extension": "off"
      }
    }
  ]
}
