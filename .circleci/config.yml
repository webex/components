version: 2.1

executors:
  node-fermium-executor:
    working_directory: ~/webex-components
    docker:
      - image: circleci/node:fermium

jobs:
  install:
    executor: node-fermium-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install dependencies & peer dependencies
          command: npx npm-install-peers
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths: node_modules
      - persist_to_workspace:
          root: .
          paths: node_modules

  test:
    executor: node-fermium-executor
    steps:
      - attach_workspace:
        - at: .
      - run:
          name: Linting
          command: npm run linter
      - run:
          name: Unit Test Coverage
          command: npm run test:coverage
      - store_test_results:
          path: test_results

  build:
    executor: node-fermium-executor
    steps:
      - attach_workspace:
        - at: .
      - run:
          name: Build
          command: npm run build
      - persist_to_workspace:
          root: .
          paths:
            - dist
            - docs/bundle-analysis-*

  storybook:
    executor: node-fermium-executor
    steps:
      - attach_workspace:
        - at: .
      - run:
          name: Build Storybook
          command: |
            rm -rf docs/storybook
            npm run storybook:build

            # Check if there's anything to commit
            if [ -n "$(git status --porcelain)" ]; then
              git add docs/storybook
              git commit -m "docs: build Storybook [skip ci]"
              git push origin master
            fi
      - persist_to_workspace:
          root: .
          paths: docs/storybook

  release:
    executor: node-fermium-executor
    steps:
      - attach_workspace:
        - at: .
      - checkout
      - run:
          name: Release
          command: npm run release

workflows:
  setup_test_release:
    jobs:
      - install
      - test:
          requires:
            - install
      - build:
          requires:
            - test
          filters:
            branches:
              only: master
      - storybook:
          requires:
            - test
          filters:
            branches:
              only: master
      - release:
          requires:
            - build
            - storybook
          filters:
            branches:
              only: master
